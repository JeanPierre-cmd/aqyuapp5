/*
  # Create site_thresholds table (v2)
  1. New Table: site_thresholds (id, site_id, parameter, warn_min, warn_max, crit_min, crit_max)
  2. Foreign Key: Add a foreign key constraint from site_thresholds.site_id to sitios.site_id to ensure data integrity.
  3. Security: Enable RLS and add a read policy for authenticated users.
  4. Seed Data: Insert default thresholds for 'centro-01'.
*/

-- 1. Create the table for site-specific parameter thresholds
CREATE TABLE IF NOT EXISTS public.site_thresholds (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    site_id text NOT NULL REFERENCES public.sitios(site_id) ON DELETE CASCADE,
    parameter text NOT NULL,
    warn_min double precision,
    warn_max double precision,
    crit_min double precision,
    crit_max double precision,
    UNIQUE(site_id, parameter)
);

COMMENT ON TABLE public.site_thresholds IS 'Stores warning and critical thresholds for water quality parameters per site.';

-- 2. Enable Row Level Security
ALTER TABLE public.site_thresholds ENABLE ROW LEVEL SECURITY;

-- 3. Create RLS policies
CREATE POLICY "Allow authenticated users to read thresholds"
ON public.site_thresholds
FOR SELECT
TO authenticated
USING (true);

-- 4. Seed initial data for the default site
-- Note: This requires 'centro-01' to exist in the 'public.sitios' table.
INSERT INTO public.site_thresholds (site_id, parameter, warn_min, warn_max, crit_min, crit_max)
VALUES
    ('centro-01', 'temperatura', 12.0, 16.0, 10.0, 18.0),
    ('centro-01', 'oxigeno', 6.0, 12.0, 4.0, 14.0),
    ('centro-01', 'ph', 7.5, 8.5, 7.0, 9.0),
    ('centro-01', 'salinidad', 32.0, 34.5, 30.0, 36.0),
    ('centro-01', 'clorofila', 0, 40, 0, 50)
ON CONFLICT (site_id, parameter) DO NOTHING;
