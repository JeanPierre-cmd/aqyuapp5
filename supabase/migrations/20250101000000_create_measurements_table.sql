/*
  # Create measurements table
  1. New Table: measurements (id, created_at, site_id, parameter, value)
  2. Indexes: Add index on site_id and created_at for faster queries.
  3. Security: Enable RLS and create a policy for authenticated users to read data.
  4. Realtime: Enable realtime on the new table.
*/

-- 1. Create the table for sensor measurements
CREATE TABLE IF NOT EXISTS public.measurements (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamptz NOT NULL DEFAULT now(),
    site_id text NOT NULL,
    parameter text NOT NULL,
    value double precision NOT NULL
);

-- 2. Add comments for clarity
COMMENT ON TABLE public.measurements IS 'Stores time-series data from environmental sensors.';
COMMENT ON COLUMN public.measurements.site_id IS 'Identifier for the cultivation center or site.';
COMMENT ON COLUMN public.measurements.parameter IS 'Type of measurement (e.g., temperatura, oxigeno, ph).';
COMMENT ON COLUMN public.measurements.value IS 'The numeric value of the measurement.';

-- 3. Add indexes for performance
CREATE INDEX IF NOT EXISTS idx_measurements_site_id_created_at ON public.measurements (site_id, created_at DESC);

-- 4. Enable Row Level Security
ALTER TABLE public.measurements ENABLE ROW LEVEL SECURITY;

-- 5. Create RLS policies
-- Allow authenticated users to read all measurements.
-- For production, you might want to restrict this to users associated with the site_id.
CREATE POLICY "Allow authenticated users to read measurements"
ON public.measurements
FOR SELECT
TO authenticated
USING (true);

-- Allow inserts for authenticated users (or a specific service role in production)
CREATE POLICY "Allow authenticated users to insert measurements"
ON public.measurements
FOR INSERT
TO authenticated
WITH CHECK (true);

-- 6. Enable realtime on the table
-- This ensures that Supabase will broadcast changes on this table.
ALTER PUBLICATION supabase_realtime ADD TABLE public.measurements;
